<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ssm.dao.FactoryDao">
    <resultMap id="factoryRM" type="ssm.model.Factory">
        <!--主键-->
        <id property="id" column="FACTORY_ID"></id>
        <!--一般属性-->
        <result property="fullName" column="FULL_NAME"></result>
        <result property="factoryName" column="FACTORY_NAME"></result>
        <result property="contacts" column="CONTACTS"></result>
        <result property="phone" column="PHONE"></result>
        <result property="mobile" column="MOBILE"></result>
        <result property="fax" column="FAX"></result>
        <result property="cnote" column="CNOTE"></result>
        <result property="inspector" column="INSPECTOR"></result>
        <result property="orderNo" column="ORDER_NO"></result>
        <result property="state" column="STATE"></result>

        <result property="createBy" column="CREATE_BY"></result>
        <result property="createDept" column="CREATE_DEPT"></result>
        <result property="createTime" column="CREATE_TIME"></result>
    </resultMap>
    <!--查询一个-->
    <!--public T get(Serializable id);	-->
    <select id="get" parameterType="String" resultMap="factoryRM">
        select * from factory_c where factory_id = #{id}
    </select>

    <!--查询所有-->
    <!--public List<T> find(Map paraMap)-->
    <select id="find" parameterType="map" resultMap="factoryRM">
        select * from factory_c
        where 1=1
        <if test="state != null">and STATE = #{state}</if>
    </select>

    <!--
        新增  oracle jdbc驱动值为null时，必须告诉它当前字段默认值的类型
        jdbcType=VARCHAR mysql不用写
     -->
    <!--public void insert(T entity);-->
    <insert id="insert" parameterType="ssm.model.Factory">
        insert into FACTORY_C
        (FACTORY_ID,FULL_NAME,FACTORY_NAME,CONTACTS,PHONE,MOBILE,FAX,CNOTE,INSPECTOR,ORDER_NO,STATE,CREATE_BY,CREATE_DEPT,CREATE_TIME)
        values
        (
            #{id},
            #{fullName,jdbcType=VARCHAR},
            #{factoryName,jdbcType=VARCHAR},
            #{contacts,jdbcType=VARCHAR},
            #{phone,jdbcType=VARCHAR},
            #{mobile,jdbcType=VARCHAR},
            #{fax,jdbcType=VARCHAR},
            #{cnote,jdbcType=VARCHAR},
            #{inspector,jdbcType=VARCHAR},
            #{orderNo,jdbcType=INTEGER},
            #{state,jdbcType=VARCHAR},
            #{createBy,jdbcType=VARCHAR},
            #{createDept,jdbcType=VARCHAR},
            #{createTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <!--修改 使用动态sql语句-->
    <!--public void update(T entity);-->
    <update id="update" parameterType="ssm.model.Factory">
        update factory_c
        <set>
            <if test="fullName != null">FULL_NAME=#{fullName,jdbcType=VARCHAR},</if>
            <if test="factoryName != null">FACTORY_NAME=#{factoryName,jdbcType=VARCHAR},</if>
            <if test="contacts != null">CONTACTS=#{contacts,jdbcType=VARCHAR},</if>
            <if test="phone != null">PHONE=#{phone,jdbcType=VARCHAR},</if>
            <if test="mobile != null">MOBILE=#{mobile,jdbcType=VARCHAR},</if>
            <if test="fax != null">FAX=#{fax,jdbcType=VARCHAR},</if>
            <if test="cnote != null">CNOTE=#{cnote,jdbcType=VARCHAR},</if>
            <if test="inspector != null">INSPECTOR=#{inspector,jdbcType=VARCHAR},</if>
            <if test="orderNo != null">ORDER_NO=#{orderNo,jdbcType=INTEGER},</if>
            <if test="state != null">STATE=#{state,jdbcType=VARCHAR},</if>
        </set>
        where FACTORY_ID=#{id}
    </update>

    <!--修改状态-->
    <!-- public void updateState(Map map);-->
    <update id="updateState" parameterType="map">
        update factory_c set state=#{state}
        where factory_id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <!--删除一个-->
    <!--public void deleteById(Serializable id);-->
    <delete id="deleteById" parameterType="string">
        delete from factory_c where factory_id=#{id}
    </delete>

    <!--删除多个-->
	<!--public void delete(Serializable[] ids);	-->
    <delete id="delete" parameterType="string">
        delete from factory_c
        where factory_id in
        <foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
</mapper>